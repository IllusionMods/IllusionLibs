name: Push to azure nuget feed

on: [push]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Setup nuget
      uses: warrenbuckley/Setup-Nuget@v1
      
    - name: Nuget pack
      working-directory: .\packaging
      run: |
        gci -Path AIGirl -Filter *.nuspec | foreach { nuget pack $_.FullName -properties "id=IllusionLibs.AIGirl.$($_.BaseName);gameVersion=2019.12.20;unityVersion=2018.2.21" }
        gci -Path EmotionCreators -Filter *.nuspec | foreach { nuget pack $_.FullName -properties "id=IllusionLibs.EmotionCreators.$($_.BaseName);gameVersion=2019.6.6;unityVersion=2017.4.24" }
        gci -Path Koikatu -Filter *.nuspec | foreach { nuget pack $_.FullName -properties "id=IllusionLibs.Koikatu.$($_.BaseName);gameVersion=2019.4.27;unityVersion=5.6.2" }
        gci -Path KoikatsuParty -Filter *.nuspec | foreach { nuget pack $_.FullName -properties "id=IllusionLibs.KoikatsuParty.$($_.BaseName);gameVersion=2019.4.27;unityVersion=5.6.2" }
        gci -Path PlayHome -Filter *.nuspec | foreach { nuget pack $_.FullName -properties "id=IllusionLibs.PlayHome.$($_.BaseName);gameVersion=2018.3.11;unityVersion=5.5.5" }
        gci -Path HoneySelect -Filter *.nuspec | foreach { nuget pack $_.FullName-properties "id=IllusionLibs.HoneySelect.$($_.BaseName);gameVersion=2017.6.30;unityVersion=5.3.5" }
        gci -Path XUnity -Filter *.nuspec | foreach { nuget pack $_.FullName -properties "id=IllusionLibs.XUnity.$($_.BaseName)" }
        gci -Path BepInEx -Filter *.nuspec | foreach { nuget pack $_.FullName -properties "id=IllusionLibs.BepInEx.$($_.BaseName)" }
      
    - name: Nuget push
      env:
        NUGET_URL: https://pkgs.dev.azure.com/IllusionMods/Nuget/_packaging/IllusionMods/nuget/v3/index.json
      run: |
        nuget sources add -name "IllusionMods" -src ${env:NUGET_URL} -username "token" -password ${{ secrets.NUGET_TOKEN }}
        nuget push **.nupkg -apikey key -noninteractive -skipduplicate -src ${env:NUGET_URL}
